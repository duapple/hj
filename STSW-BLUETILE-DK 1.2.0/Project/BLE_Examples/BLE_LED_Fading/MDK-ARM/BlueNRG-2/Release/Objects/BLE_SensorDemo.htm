<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Release\Objects\BLE_SensorDemo.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Release\Objects\BLE_SensorDemo.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Mon Feb 24 09:10:48 2020
<BR><P>
<H3>Maximum Stack Usage =        192 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
RESET_HANDLER &rArr; main &rArr; Sensor_DeviceInit &rArr; SensorsScan &rArr; VL53L1_WaitMs &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[c]">ADC_Handler</a> from system_bluenrg1.o(i.ADC_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[a]">Blue_Handler</a> from bluenrg1_it.o(i.Blue_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[15]">DMA_Handler</a> from system_bluenrg1.o(i.DMA_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[6]">GPIO_Handler</a> from bluenrg1_it.o(i.GPIO_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[2]">HardFault_Handler</a> from bluenrg1_it.o(i.HardFault_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[e]">I2C1_Handler</a> from system_bluenrg1.o(i.I2C1_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[d]">I2C2_Handler</a> from system_bluenrg1.o(i.I2C2_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[f]">MFT1A_Handler</a> from system_bluenrg1.o(i.MFT1A_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[10]">MFT1B_Handler</a> from system_bluenrg1.o(i.MFT1B_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[11]">MFT2A_Handler</a> from system_bluenrg1.o(i.MFT2A_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[12]">MFT2B_Handler</a> from system_bluenrg1.o(i.MFT2B_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[1]">NMI_Handler</a> from bluenrg1_it.o(i.NMI_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[7]">NVM_Handler</a> from system_bluenrg1.o(i.NVM_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[14]">PKA_Handler</a> from system_bluenrg1.o(i.PKA_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[4]">PendSV_Handler</a> from system_bluenrg1.o(i.PendSV_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[0]">RESET_HANDLER</a> from system_bluenrg1.o(i.RESET_HANDLER) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[13]">RTC_Handler</a> from system_bluenrg1.o(i.RTC_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[9]">SPI_Handler</a> from system_bluenrg1.o(i.SPI_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[3]">SVC_Handler</a> from bluenrg1_it.o(i.SVC_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[5]">SysTick_Handler</a> from bluenrg1_it.o(i.SysTick_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[8]">UART_Handler</a> from bluenrg1_it.o(i.UART_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[b]">WDG_Handler</a> from system_bluenrg1.o(i.WDG_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[17]">fputc</a> from sdk_eval_com.o(i.fputc) referenced from printf3.o(i.__0printf$3)
 <LI><a href="#[16]">main</a> from led_fading_main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[a1]"></a>CS_contextSave</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, context_switch.o(. text), UNUSED)

<P><STRONG><a name="[97]"></a>CS_contextRestore</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, context_switch.o(. text))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__low_level_init
</UL>

<P><STRONG><a name="[18]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_HANDLER
</UL>

<P><STRONG><a name="[a2]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry3.o(.ARM.Collect$$$$00000002))

<P><STRONG><a name="[19]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2f]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[a3]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[a4]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[a5]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[a6]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[a7]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[a8]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[1c]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[a9]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[1b]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[aa]"></a>___aeabi_memcpy8$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memcpy.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>__aeabi_memcpy</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, memcpy.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceConfiguration
</UL>

<P><STRONG><a name="[ac]"></a>memcpy</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memcpy.o(.text), UNUSED)

<P><STRONG><a name="[1e]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[ad]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1d]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[af]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[b0]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1f]"></a>memset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[8c]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[20]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[22]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>

<P><STRONG><a name="[27]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_WaitMs
</UL>

<P><STRONG><a name="[28]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[29]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[2b]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_WaitMs
</UL>

<P><STRONG><a name="[2c]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_WaitMs
</UL>

<P><STRONG><a name="[8d]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[92]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_WaitMs
</UL>

<P><STRONG><a name="[23]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[b1]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[2e]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[b2]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[24]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[b3]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[b4]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[21]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>

<P><STRONG><a name="[2a]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[26]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[25]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>

<P><STRONG><a name="[1a]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[b5]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>__decompress0</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[c]"></a>ADC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.ADC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[33]"></a>BOR_ConfigSave</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, system_bluenrg1.o(i.BOR_ConfigSave))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BOR_ConfigSave
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceConfiguration
</UL>

<P><STRONG><a name="[a]"></a>Blue_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_it.o(i.Blue_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[6f]"></a>Clock_Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, clock.o(i.Clock_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Clock_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
</UL>

<P><STRONG><a name="[15]"></a>DMA_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.DMA_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[30]"></a>DeviceConfiguration</STRONG> (Thumb, 288 bytes, Stack size 64 bytes, system_bluenrg1.o(i.DeviceConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DeviceConfiguration &rArr; BOR_ConfigSave
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetPartInfo
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_RF_FrontEnd
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOR_ConfigSave
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[35]"></a>GPIO_Configuration</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, hw_config.o(i.GPIO_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIO_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtrl_PeripheralClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
</UL>

<P><STRONG><a name="[6]"></a>GPIO_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_it.o(i.GPIO_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[38]"></a>GPIO_Init</STRONG> (Thumb, 206 bytes, Stack size 20 bytes, bluenrg1_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalLedInit
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CInit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalComUartInit
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
</UL>

<P><STRONG><a name="[37]"></a>GPIO_StructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bluenrg1_gpio.o(i.GPIO_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
</UL>

<P><STRONG><a name="[39]"></a>GPIO_WriteBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bluenrg1_gpio.o(i.GPIO_WriteBit))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalLedOn
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalLedOff
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsScan
</UL>

<P><STRONG><a name="[80]"></a>Get_LedGpioPin</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sdk_eval_led.o(i.Get_LedGpioPin))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalLedOn
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalLedOff
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalLedInit
</UL>

<P><STRONG><a name="[32]"></a>HAL_GetPartInfo</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, miscutil.o(i.HAL_GetPartInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_GetPartInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceConfiguration
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nextRF_transaction
</UL>

<P><STRONG><a name="[3a]"></a>HTS221_Activate</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, hts221.o(i.HTS221_Activate))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HTS221_Activate &rArr; HTS221_ReadReg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_WriteReg
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Humidity_Sensor
</UL>

<P><STRONG><a name="[3d]"></a>HTS221_Get_DeviceID</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, hts221.o(i.HTS221_Get_DeviceID))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HTS221_Get_DeviceID &rArr; HTS221_ReadReg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsScan
</UL>

<P><STRONG><a name="[3b]"></a>HTS221_ReadReg</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, hts221.o(i.HTS221_ReadReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HTS221_ReadReg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CRead
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_PowerDownMode
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_Odr
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_IrqOutputType
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_IrqActiveLevel
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_HeaterState
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_BduMode
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_AvgT
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_AvgH
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_DeviceID
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Activate
</UL>

<P><STRONG><a name="[3f]"></a>HTS221_Set_AvgH</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, hts221.o(i.HTS221_Set_AvgH))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HTS221_Set_AvgH &rArr; HTS221_ReadReg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_assert_failed
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_WriteReg
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Humidity_Sensor
</UL>

<P><STRONG><a name="[41]"></a>HTS221_Set_AvgT</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, hts221.o(i.HTS221_Set_AvgT))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HTS221_Set_AvgT &rArr; HTS221_ReadReg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_assert_failed
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_WriteReg
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Humidity_Sensor
</UL>

<P><STRONG><a name="[42]"></a>HTS221_Set_BduMode</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, hts221.o(i.HTS221_Set_BduMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HTS221_Set_BduMode &rArr; HTS221_ReadReg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_assert_failed
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_WriteReg
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Humidity_Sensor
</UL>

<P><STRONG><a name="[43]"></a>HTS221_Set_HeaterState</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, hts221.o(i.HTS221_Set_HeaterState))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HTS221_Set_HeaterState &rArr; HTS221_ReadReg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_assert_failed
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_WriteReg
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Humidity_Sensor
</UL>

<P><STRONG><a name="[44]"></a>HTS221_Set_IrqActiveLevel</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, hts221.o(i.HTS221_Set_IrqActiveLevel))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HTS221_Set_IrqActiveLevel &rArr; HTS221_ReadReg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_assert_failed
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_WriteReg
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Humidity_Sensor
</UL>

<P><STRONG><a name="[45]"></a>HTS221_Set_IrqOutputType</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, hts221.o(i.HTS221_Set_IrqOutputType))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HTS221_Set_IrqOutputType &rArr; HTS221_ReadReg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_assert_failed
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_WriteReg
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Humidity_Sensor
</UL>

<P><STRONG><a name="[46]"></a>HTS221_Set_Odr</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, hts221.o(i.HTS221_Set_Odr))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HTS221_Set_Odr &rArr; HTS221_ReadReg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_assert_failed
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_WriteReg
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Humidity_Sensor
</UL>

<P><STRONG><a name="[47]"></a>HTS221_Set_PowerDownMode</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, hts221.o(i.HTS221_Set_PowerDownMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HTS221_Set_PowerDownMode &rArr; HTS221_ReadReg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_assert_failed
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_WriteReg
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Humidity_Sensor
</UL>

<P><STRONG><a name="[3c]"></a>HTS221_WriteReg</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, hts221.o(i.HTS221_WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HTS221_WriteReg &rArr; SdkEvalI2CWrite &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_PowerDownMode
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_Odr
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_IrqOutputType
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_IrqActiveLevel
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_HeaterState
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_BduMode
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_AvgT
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_AvgH
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Activate
</UL>

<P><STRONG><a name="[40]"></a>HTS221_assert_failed</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hts221.o(i.HTS221_assert_failed))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HTS221_assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_PowerDownMode
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_Odr
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_IrqOutputType
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_IrqActiveLevel
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_HeaterState
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_BduMode
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_AvgT
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_AvgH
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[e]"></a>I2C1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.I2C1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[d]"></a>I2C2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.I2C2_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[79]"></a>I2C_BeginTransaction</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bluenrg1_i2c.o(i.I2C_BeginTransaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_BeginTransaction
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CWrite
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CRead16
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CRead
</UL>

<P><STRONG><a name="[76]"></a>I2C_ClearITPendingBit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bluenrg1_i2c.o(i.I2C_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CWrite
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CRead16
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CRead
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CInit
</UL>

<P><STRONG><a name="[7a]"></a>I2C_FillTxFIFO</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bluenrg1_i2c.o(i.I2C_FillTxFIFO))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CWrite
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CRead16
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CRead
</UL>

<P><STRONG><a name="[77]"></a>I2C_FlushTx</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bluenrg1_i2c.o(i.I2C_FlushTx))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CWrite
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CRead16
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CRead
</UL>

<P><STRONG><a name="[7c]"></a>I2C_GetITStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bluenrg1_i2c.o(i.I2C_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CWrite
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CRead16
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CRead
</UL>

<P><STRONG><a name="[7b]"></a>I2C_GetStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bluenrg1_i2c.o(i.I2C_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CWrite
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CRead16
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CRead
</UL>

<P><STRONG><a name="[4a]"></a>I2C_Init</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, bluenrg1_i2c.o(i.I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = I2C_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CInit
</UL>

<P><STRONG><a name="[7d]"></a>I2C_ReceiveData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bluenrg1_i2c.o(i.I2C_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CRead16
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CRead
</UL>

<P><STRONG><a name="[75]"></a>I2C_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bluenrg1_i2c.o(i.I2C_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CInit
</UL>

<P><STRONG><a name="[78]"></a>I2C_WaitFlushTx</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bluenrg1_i2c.o(i.I2C_WaitFlushTx))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CWrite
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CRead16
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CRead
</UL>

<P><STRONG><a name="[4b]"></a>Init_Accelerometer_Gyroscope</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, sensor.o(i.Init_Accelerometer_Gyroscope))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Init_Accelerometer_Gyroscope &rArr; lsm6dso_int_notification_set &rArr; lsm6dso_mem_bank_set &rArr; lsm6dso_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_xl_power_mode_set
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_xl_full_scale_set
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_xl_data_rate_set
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_reset_set
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_reset_get
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_pin_polarity_set
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_pin_mode_set
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_int_notification_set
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_i3c_disable_set
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_gy_power_mode_set
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_gy_full_scale_set
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_gy_data_rate_set
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_block_data_update_set
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_auto_increment_set
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_all_on_int1_set
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_DeviceInit
</UL>

<P><STRONG><a name="[5b]"></a>Init_Humidity_Sensor</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sensor.o(i.Init_Humidity_Sensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init_Humidity_Sensor &rArr; HTS221_Set_PowerDownMode &rArr; HTS221_ReadReg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_PowerDownMode
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_Odr
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_IrqOutputType
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_IrqActiveLevel
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_HeaterState
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_BduMode
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_AvgT
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_AvgH
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Activate
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_DeviceInit
</UL>

<P><STRONG><a name="[5c]"></a>Init_Magnetometer</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, sensor.o(i.Init_Magnetometer))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init_Magnetometer &rArr; lis2mdl_set_rst_mode_set &rArr; lis2mdl_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_set_rst_mode_set
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_operating_mode_set
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_offset_temp_comp_set
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_data_rate_set
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_block_data_update_set
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_DeviceInit
</UL>

<P><STRONG><a name="[62]"></a>Init_Pressure_Temperature_Sensor</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, sensor.o(i.Init_Pressure_Temperature_Sensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Init_Pressure_Temperature_Sensor &rArr; lps22hh_data_rate_set &rArr; lps22hh_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_pin_polarity_set
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_pin_mode_set
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_int_pd_set
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_int_notification_set
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_i3c_interface_set
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_data_rate_set
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_block_data_update_set
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_DeviceInit
</UL>

<P><STRONG><a name="[6a]"></a>LED_AppTick</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, led_fading_main.o(i.LED_AppTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LED_AppTick &rArr; SdkEvalLedOn
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalLedOn
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalLedOff
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f]"></a>MFT1A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.MFT1A_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[10]"></a>MFT1B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.MFT1B_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[11]"></a>MFT2A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.MFT2A_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[12]"></a>MFT2B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.MFT2B_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[7]"></a>NVM_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.NVM_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[14]"></a>PKA_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.PKA_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[6d]"></a>Platform_Init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, hw_config.o(i.Platform_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Platform_Init &rArr; SdkEvalComUartInit &rArr; UART_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalComUartInit
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[0]"></a>RESET_HANDLER</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, system_bluenrg1.o(i.RESET_HANDLER))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = RESET_HANDLER &rArr; main &rArr; Sensor_DeviceInit &rArr; SensorsScan &rArr; VL53L1_WaitMs &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__low_level_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[13]"></a>RTC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.RTC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[a0]"></a>SET_BORconfigStatus</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, system_bluenrg1.o(i.SET_BORconfigStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SET_BORconfigStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nextRF_transaction
</UL>

<P><STRONG><a name="[9]"></a>SPI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.SPI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[6e]"></a>SdkEvalComUartInit</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, sdk_eval_com.o(i.SdkEvalComUartInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SdkEvalComUartInit &rArr; UART_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxFifoIrqLevelConfig
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtrl_PeripheralClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
</UL>

<P><STRONG><a name="[74]"></a>SdkEvalI2CInit</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, sdk_eval_i2c.o(i.SdkEvalI2CInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SdkEvalI2CInit &rArr; I2C_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtrl_PeripheralClockCmd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_StructInit
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_DeviceInit
</UL>

<P><STRONG><a name="[3e]"></a>SdkEvalI2CRead</STRONG> (Thumb, 194 bytes, Stack size 48 bytes, sdk_eval_i2c.o(i.SdkEvalI2CRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitFlushTx
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveData
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetStatus
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetITStatus
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_FlushTx
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_FillTxFIFO
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearITPendingBit
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_BeginTransaction
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_read_reg
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_read_reg
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_read_reg
</UL>

<P><STRONG><a name="[7e]"></a>SdkEvalI2CRead16</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, sdk_eval_i2c.o(i.SdkEvalI2CRead16))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SdkEvalI2CRead16 &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitFlushTx
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveData
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetStatus
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetITStatus
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_FlushTx
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_FillTxFIFO
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearITPendingBit
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_BeginTransaction
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_ReadMulti
</UL>

<P><STRONG><a name="[48]"></a>SdkEvalI2CWrite</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, sdk_eval_i2c.o(i.SdkEvalI2CWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SdkEvalI2CWrite &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitFlushTx
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetStatus
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetITStatus
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_FlushTx
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_FillTxFIFO
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearITPendingBit
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_BeginTransaction
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_WriteReg
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_write_reg
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_write_reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_write_reg
</UL>

<P><STRONG><a name="[9f]"></a>SdkEvalIdentification</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sdk_eval_config.o(i.SdkEvalIdentification))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>SdkEvalLedInit</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, sdk_eval_led.o(i.SdkEvalLedInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SdkEvalLedInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtrl_PeripheralClockCmd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalLedOff
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_LedGpioPin
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_DeviceInit
</UL>

<P><STRONG><a name="[6c]"></a>SdkEvalLedOff</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sdk_eval_led.o(i.SdkEvalLedOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SdkEvalLedOff
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_LedGpioPin
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalLedInit
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_AppTick
</UL>

<P><STRONG><a name="[6b]"></a>SdkEvalLedOn</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sdk_eval_led.o(i.SdkEvalLedOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SdkEvalLedOn
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_LedGpioPin
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_AppTick
</UL>

<P><STRONG><a name="[84]"></a>Sensor_DeviceInit</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sensor.o(i.Sensor_DeviceInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Sensor_DeviceInit &rArr; SensorsScan &rArr; VL53L1_WaitMs &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalLedInit
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CInit
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsScan
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Pressure_Temperature_Sensor
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Magnetometer
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Humidity_Sensor
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Accelerometer_Gyroscope
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[85]"></a>SensorsScan</STRONG> (Thumb, 256 bytes, Stack size 32 bytes, sensor.o(i.SensorsScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = SensorsScan &rArr; VL53L1_WaitMs &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_DeviceID
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_device_id_get
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_device_id_get
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_WaitMs
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_GetSensorId
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_device_id_get
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_DeviceInit
</UL>

<P><STRONG><a name="[34]"></a>Set_RF_FrontEnd</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, system_bluenrg1.o(i.Set_RF_FrontEnd))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceConfiguration
</UL>

<P><STRONG><a name="[95]"></a>SysCtrl_GetWakeupResetReason</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, bluenrg1_sysctrl.o(i.SysCtrl_GetWakeupResetReason))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__low_level_init
</UL>

<P><STRONG><a name="[36]"></a>SysCtrl_PeripheralClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bluenrg1_sysctrl.o(i.SysCtrl_PeripheralClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalLedInit
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CInit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalComUartInit
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 574 bytes, Stack size 24 bytes, bluenrg1_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SysTick_Handler &rArr; lsm6dso_acceleration_raw_get &rArr; lsm6dso_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_acceleration_raw_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[8e]"></a>SystemInit</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, system_bluenrg1.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SystemInit &rArr; DeviceConfiguration &rArr; BOR_ConfigSave
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceConfiguration
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[73]"></a>UART_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bluenrg1_uart.o(i.UART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalComUartInit
</UL>

<P><STRONG><a name="[82]"></a>UART_GetFlagStatus</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, bluenrg1_uart.o(i.UART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalUart_Send_Data
</UL>

<P><STRONG><a name="[8]"></a>UART_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_it.o(i.UART_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[71]"></a>UART_Init</STRONG> (Thumb, 302 bytes, Stack size 16 bytes, bluenrg1_uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalComUartInit
</UL>

<P><STRONG><a name="[72]"></a>UART_RxFifoIrqLevelConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bluenrg1_uart.o(i.UART_RxFifoIrqLevelConfig))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalComUartInit
</UL>

<P><STRONG><a name="[83]"></a>UART_SendData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bluenrg1_uart.o(i.UART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalUart_Send_Data
</UL>

<P><STRONG><a name="[8a]"></a>VL53L1X_GetSensorId</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, vl53l1x_api.o(i.VL53L1X_GetSensorId))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = VL53L1X_GetSensorId &rArr; VL53L1_RdWord &rArr; VL53L1_ReadMulti &rArr; SdkEvalI2CRead16 &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_RdWord
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsScan
</UL>

<P><STRONG><a name="[90]"></a>VL53L1_RdWord</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, vl53l1_platform.o(i.VL53L1_RdWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = VL53L1_RdWord &rArr; VL53L1_ReadMulti &rArr; SdkEvalI2CRead16 &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_ReadMulti
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_GetSensorId
</UL>

<P><STRONG><a name="[91]"></a>VL53L1_ReadMulti</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, vl53l1_platform.o(i.VL53L1_ReadMulti))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = VL53L1_ReadMulti &rArr; SdkEvalI2CRead16 &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CRead16
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_RdWord
</UL>

<P><STRONG><a name="[89]"></a>VL53L1_WaitMs</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, vl53l1_platform.o(i.VL53L1_WaitMs))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = VL53L1_WaitMs &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsScan
</UL>

<P><STRONG><a name="[b]"></a>WDG_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.WDG_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[93]"></a>__0printf$3</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[b8]"></a>__1printf$3</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)

<P><STRONG><a name="[49]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_assert_failed
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsScan
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[2d]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[70]"></a>__low_level_init</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, system_bluenrg1.o(i.__low_level_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = __low_level_init &rArr; nextRF_transaction &rArr; SET_BORconfigStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CS_contextRestore
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtrl_GetWakeupResetReason
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nextRF_transaction
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_HANDLER
</UL>

<P><STRONG><a name="[b9]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[ba]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[bb]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[17]"></a>fputc</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sdk_eval_com.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc &rArr; SdkEvalUart_Send_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalUart_Send_Data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf3.o(i.__0printf$3)
</UL>
<P><STRONG><a name="[5e]"></a>lis2mdl_block_data_update_set</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lis2mdl.o(i.lis2mdl_block_data_update_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lis2mdl_block_data_update_set &rArr; lis2mdl_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_write_reg
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Magnetometer
</UL>

<P><STRONG><a name="[5d]"></a>lis2mdl_data_rate_set</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lis2mdl.o(i.lis2mdl_data_rate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lis2mdl_data_rate_set &rArr; lis2mdl_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_write_reg
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Magnetometer
</UL>

<P><STRONG><a name="[88]"></a>lis2mdl_device_id_get</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lis2mdl.o(i.lis2mdl_device_id_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lis2mdl_device_id_get &rArr; lis2mdl_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsScan
</UL>

<P><STRONG><a name="[61]"></a>lis2mdl_offset_temp_comp_set</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lis2mdl.o(i.lis2mdl_offset_temp_comp_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lis2mdl_offset_temp_comp_set &rArr; lis2mdl_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_write_reg
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Magnetometer
</UL>

<P><STRONG><a name="[60]"></a>lis2mdl_operating_mode_set</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lis2mdl.o(i.lis2mdl_operating_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lis2mdl_operating_mode_set &rArr; lis2mdl_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_write_reg
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Magnetometer
</UL>

<P><STRONG><a name="[98]"></a>lis2mdl_read_reg</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lis2mdl.o(i.lis2mdl_read_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = lis2mdl_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CRead
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_set_rst_mode_set
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_operating_mode_set
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_offset_temp_comp_set
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_device_id_get
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_data_rate_set
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_block_data_update_set
</UL>

<P><STRONG><a name="[5f]"></a>lis2mdl_set_rst_mode_set</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lis2mdl.o(i.lis2mdl_set_rst_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lis2mdl_set_rst_mode_set &rArr; lis2mdl_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_write_reg
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Magnetometer
</UL>

<P><STRONG><a name="[99]"></a>lis2mdl_write_reg</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lis2mdl.o(i.lis2mdl_write_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lis2mdl_write_reg &rArr; SdkEvalI2CWrite &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_set_rst_mode_set
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_operating_mode_set
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_offset_temp_comp_set
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_data_rate_set
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2mdl_block_data_update_set
</UL>

<P><STRONG><a name="[64]"></a>lps22hh_block_data_update_set</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lps22hh.o(i.lps22hh_block_data_update_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lps22hh_block_data_update_set &rArr; lps22hh_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_write_reg
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Pressure_Temperature_Sensor
</UL>

<P><STRONG><a name="[65]"></a>lps22hh_data_rate_set</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, lps22hh.o(i.lps22hh_data_rate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lps22hh_data_rate_set &rArr; lps22hh_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_write_reg
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Pressure_Temperature_Sensor
</UL>

<P><STRONG><a name="[87]"></a>lps22hh_device_id_get</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lps22hh.o(i.lps22hh_device_id_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lps22hh_device_id_get &rArr; lps22hh_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsScan
</UL>

<P><STRONG><a name="[63]"></a>lps22hh_i3c_interface_set</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lps22hh.o(i.lps22hh_i3c_interface_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lps22hh_i3c_interface_set &rArr; lps22hh_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_write_reg
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Pressure_Temperature_Sensor
</UL>

<P><STRONG><a name="[68]"></a>lps22hh_int_notification_set</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lps22hh.o(i.lps22hh_int_notification_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lps22hh_int_notification_set &rArr; lps22hh_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_write_reg
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Pressure_Temperature_Sensor
</UL>

<P><STRONG><a name="[69]"></a>lps22hh_int_pd_set</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lps22hh.o(i.lps22hh_int_pd_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lps22hh_int_pd_set &rArr; lps22hh_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_write_reg
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Pressure_Temperature_Sensor
</UL>

<P><STRONG><a name="[66]"></a>lps22hh_pin_mode_set</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lps22hh.o(i.lps22hh_pin_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lps22hh_pin_mode_set &rArr; lps22hh_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_write_reg
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Pressure_Temperature_Sensor
</UL>

<P><STRONG><a name="[67]"></a>lps22hh_pin_polarity_set</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lps22hh.o(i.lps22hh_pin_polarity_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lps22hh_pin_polarity_set &rArr; lps22hh_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_write_reg
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Pressure_Temperature_Sensor
</UL>

<P><STRONG><a name="[9a]"></a>lps22hh_read_reg</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lps22hh.o(i.lps22hh_read_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = lps22hh_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CRead
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_pin_polarity_set
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_pin_mode_set
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_int_pd_set
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_int_notification_set
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_i3c_interface_set
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_device_id_get
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_data_rate_set
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_block_data_update_set
</UL>

<P><STRONG><a name="[9b]"></a>lps22hh_write_reg</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lps22hh.o(i.lps22hh_write_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lps22hh_write_reg &rArr; SdkEvalI2CWrite &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_pin_polarity_set
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_pin_mode_set
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_int_pd_set
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_int_notification_set
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_i3c_interface_set
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_data_rate_set
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hh_block_data_update_set
</UL>

<P><STRONG><a name="[8b]"></a>lsm6dso_acceleration_raw_get</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lsm6dso.o(i.lsm6dso_acceleration_raw_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lsm6dso_acceleration_raw_get &rArr; lsm6dso_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[51]"></a>lsm6dso_all_on_int1_set</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6dso.o(i.lsm6dso_all_on_int1_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lsm6dso_all_on_int1_set &rArr; lsm6dso_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_write_reg
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Accelerometer_Gyroscope
</UL>

<P><STRONG><a name="[5a]"></a>lsm6dso_auto_increment_set</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6dso.o(i.lsm6dso_auto_increment_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lsm6dso_auto_increment_set &rArr; lsm6dso_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_write_reg
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Accelerometer_Gyroscope
</UL>

<P><STRONG><a name="[53]"></a>lsm6dso_block_data_update_set</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6dso.o(i.lsm6dso_block_data_update_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lsm6dso_block_data_update_set &rArr; lsm6dso_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_write_reg
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Accelerometer_Gyroscope
</UL>

<P><STRONG><a name="[86]"></a>lsm6dso_device_id_get</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lsm6dso.o(i.lsm6dso_device_id_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lsm6dso_device_id_get &rArr; lsm6dso_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsScan
</UL>

<P><STRONG><a name="[57]"></a>lsm6dso_gy_data_rate_set</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lsm6dso.o(i.lsm6dso_gy_data_rate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lsm6dso_gy_data_rate_set &rArr; lsm6dso_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_write_reg
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Accelerometer_Gyroscope
</UL>

<P><STRONG><a name="[59]"></a>lsm6dso_gy_full_scale_set</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6dso.o(i.lsm6dso_gy_full_scale_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lsm6dso_gy_full_scale_set &rArr; lsm6dso_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_write_reg
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Accelerometer_Gyroscope
</UL>

<P><STRONG><a name="[55]"></a>lsm6dso_gy_power_mode_set</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lsm6dso.o(i.lsm6dso_gy_power_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lsm6dso_gy_power_mode_set &rArr; lsm6dso_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_write_reg
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Accelerometer_Gyroscope
</UL>

<P><STRONG><a name="[4c]"></a>lsm6dso_i3c_disable_set</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, lsm6dso.o(i.lsm6dso_i3c_disable_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lsm6dso_i3c_disable_set &rArr; lsm6dso_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_write_reg
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Accelerometer_Gyroscope
</UL>

<P><STRONG><a name="[52]"></a>lsm6dso_int_notification_set</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, lsm6dso.o(i.lsm6dso_int_notification_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lsm6dso_int_notification_set &rArr; lsm6dso_mem_bank_set &rArr; lsm6dso_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_write_reg
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_read_reg
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_mem_bank_set
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Accelerometer_Gyroscope
</UL>

<P><STRONG><a name="[9e]"></a>lsm6dso_mem_bank_set</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lsm6dso.o(i.lsm6dso_mem_bank_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lsm6dso_mem_bank_set &rArr; lsm6dso_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_write_reg
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_int_notification_set
</UL>

<P><STRONG><a name="[4f]"></a>lsm6dso_pin_mode_set</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6dso.o(i.lsm6dso_pin_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lsm6dso_pin_mode_set &rArr; lsm6dso_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_write_reg
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Accelerometer_Gyroscope
</UL>

<P><STRONG><a name="[50]"></a>lsm6dso_pin_polarity_set</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6dso.o(i.lsm6dso_pin_polarity_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lsm6dso_pin_polarity_set &rArr; lsm6dso_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_write_reg
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Accelerometer_Gyroscope
</UL>

<P><STRONG><a name="[9c]"></a>lsm6dso_read_reg</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lsm6dso.o(i.lsm6dso_read_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = lsm6dso_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CRead
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_xl_power_mode_set
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_xl_full_scale_set
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_xl_data_rate_set
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_reset_set
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_reset_get
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_pin_polarity_set
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_pin_mode_set
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_mem_bank_set
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_int_notification_set
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_i3c_disable_set
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_gy_power_mode_set
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_gy_full_scale_set
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_gy_data_rate_set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_device_id_get
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_block_data_update_set
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_auto_increment_set
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_all_on_int1_set
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_acceleration_raw_get
</UL>

<P><STRONG><a name="[4e]"></a>lsm6dso_reset_get</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lsm6dso.o(i.lsm6dso_reset_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lsm6dso_reset_get &rArr; lsm6dso_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Accelerometer_Gyroscope
</UL>

<P><STRONG><a name="[4d]"></a>lsm6dso_reset_set</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6dso.o(i.lsm6dso_reset_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lsm6dso_reset_set &rArr; lsm6dso_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_write_reg
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Accelerometer_Gyroscope
</UL>

<P><STRONG><a name="[9d]"></a>lsm6dso_write_reg</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lsm6dso.o(i.lsm6dso_write_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm6dso_write_reg &rArr; SdkEvalI2CWrite &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalI2CWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_xl_power_mode_set
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_xl_full_scale_set
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_xl_data_rate_set
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_reset_set
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_pin_polarity_set
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_pin_mode_set
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_mem_bank_set
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_int_notification_set
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_i3c_disable_set
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_gy_power_mode_set
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_gy_full_scale_set
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_gy_data_rate_set
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_block_data_update_set
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_auto_increment_set
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_all_on_int1_set
</UL>

<P><STRONG><a name="[56]"></a>lsm6dso_xl_data_rate_set</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lsm6dso.o(i.lsm6dso_xl_data_rate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lsm6dso_xl_data_rate_set &rArr; lsm6dso_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_write_reg
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Accelerometer_Gyroscope
</UL>

<P><STRONG><a name="[58]"></a>lsm6dso_xl_full_scale_set</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6dso.o(i.lsm6dso_xl_full_scale_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lsm6dso_xl_full_scale_set &rArr; lsm6dso_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_write_reg
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Accelerometer_Gyroscope
</UL>

<P><STRONG><a name="[54]"></a>lsm6dso_xl_power_mode_set</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lsm6dso.o(i.lsm6dso_xl_power_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lsm6dso_xl_power_mode_set &rArr; lsm6dso_read_reg &rArr; SdkEvalI2CRead &rArr; I2C_BeginTransaction
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_write_reg
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dso_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Accelerometer_Gyroscope
</UL>

<P><STRONG><a name="[16]"></a>main</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, led_fading_main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = main &rArr; Sensor_DeviceInit &rArr; SensorsScan &rArr; VL53L1_WaitMs &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalIdentification
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_AppTick
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_DeviceInit
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[81]"></a>SdkEvalUart_Send_Data</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, sdk_eval_com.o(i.SdkEvalUart_Send_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SdkEvalUart_Send_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[8f]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, system_bluenrg1.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[96]"></a>nextRF_transaction</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, system_bluenrg1.o(i.nextRF_transaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = nextRF_transaction &rArr; SET_BORconfigStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_BORconfigStatus
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetPartInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__low_level_init
</UL>

<P><STRONG><a name="[94]"></a>_printf_core</STRONG> (Thumb, 456 bytes, Stack size 88 bytes, printf3.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$3
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
